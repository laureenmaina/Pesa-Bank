{"ast":null,"code":"var _jsxFileName = \"/home/laurine/development/phase4/Pesa-Bank/Frontend/src/components/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUp(_ref) {\n  _s();\n  let {\n    setUser\n  } = _ref;\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [error, setError] = useState(null);\n  function handleSignUp() {\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      if (!response.ok) {\n        if (response.status === 409) {\n          // Change to 409 based on your backend response\n          setError(\"Username already exists. Please log in.\");\n        } else {\n          throw new Error(\"Network response was not ok\");\n        }\n      }\n      return response.json();\n    }).then(user => {\n      setUser(user);\n      history.push(\"/\");\n    });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    setError(null); // Reset error state\n\n    // Check if passwords match\n    if (password !== passwordConfirmation) {\n      setError(\"Passwords do not match.\");\n      return; // Prevent submission\n    }\n\n    handleSignUp();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labels\",\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputfields\",\n        type: \"text\",\n        id: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        className: \"labels; inputfields\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        className: \"labels\",\n        label: \"Password Confirmation\",\n        id: \"password_confirmation\",\n        value: passwordConfirmation,\n        onChange: e => setPasswordConfirmation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitbtns\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n// Reusable Password Input component\n_s(SignUp, \"UUzXSjB4snybLI+YeDwc4/U5S3w=\", false, function () {\n  return [useHistory];\n});\n_c = SignUp;\nfunction PasswordInput(_ref2) {\n  let {\n    label = \"Password\",\n    id,\n    value,\n    onChange\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: id,\n      value: value,\n      onChange: onChange,\n      autoComplete: \"current-password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = PasswordInput;\nexport default SignUp;\nvar _c, _c2;\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"PasswordInput\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_ref","_s","setUser","history","username","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","error","setError","handleSignUp","fetch","method","headers","body","JSON","stringify","then","response","ok","status","Error","json","user","push","handleSubmit","e","preventDefault","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","htmlFor","type","id","autoComplete","value","onChange","target","PasswordInput","label","_c","_ref2","_c2","$RefreshReg$"],"sources":["/home/laurine/development/phase4/Pesa-Bank/Frontend/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction SignUp({ setUser }) {\n\n  const history = useHistory();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  function handleSignUp() {\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          if (response.status === 409) { // Change to 409 based on your backend response\n            setError(\"Username already exists. Please log in.\");\n          } else {\n            throw new Error(\"Network response was not ok\");\n          }\n        }\n        return response.json();\n      })\n      .then((user) => {\n        setUser(user);\n        history.push(\"/\");\n      })\n  \n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setError(null); // Reset error state\n\n    // Check if passwords match\n    if (password !== passwordConfirmation) {\n      setError(\"Passwords do not match.\");\n      return; // Prevent submission\n    }\n\n    handleSignUp();\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Sign Up</h1>\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n        <label className=\"labels\" htmlFor=\"username\">Username</label>\n        <input className=\"inputfields\"\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <PasswordInput className=\"labels; inputfields\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <PasswordInput className=\"labels\"\n          label=\"Password Confirmation\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n        />\n        <button className=\"submitbtns\" type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\n// Reusable Password Input component\nfunction PasswordInput({ label = \"Password\", id, value, onChange }) {\n  return (\n    <>\n      <label htmlFor={id}>{label}</label>\n      <input\n        type=\"password\"\n        id={id}\n        value={value}\n        onChange={onChange}\n        autoComplete=\"current-password\"\n      />\n    </>\n  );\n}\n\nexport default SignUp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}